---
- name: Get VPool, Domain, AEP
  hosts: apic
  connection: local
  gather_facts: no

  tasks:
  - name: Get facts from XLSX file
    xls_to_facts:
      src: ../../ACI_Deployment_Template.xlsx
    no_log: True

  - name: Get vlan range
    aci_vlan_pool_encap_block:
     hostname: "{{ inventory_hostname }}"
     username: "{{ username }}"
     password: "{{ password }}"
     validate_certs: False
     pool: "{{ item.VLAN_Names }}"
     block_name: "{{ item.VLAN_Names }}"
     block_start: "{{ item.Start_VLAN }}"
     block_end: "{{ item.End_VLAN }}"
     allocation_mode: "{{ item.Allocation_Mode }}"
     pool_allocation_mode: "{{ item.Allocation_Mode }}"
     state: query
    with_items: "{{ spreadsheet_VLAN_AEP_Dom }}"
    no_log: True
    register: vlan_range_output

  - name: Get Bind/Detach Domain of VLAN pool
    aci_domain_to_vlan_pool:
      hostname: "{{ inventory_hostname }}"
      username: '{{ username }}'
      password: "{{ password }}"
      validate_certs: False
      domain: "{{ item.Domain }}"
      domain_type: "{{ item.Domain_Type}}"
      pool: "{{ item.VLAN_Names }}"
      pool_allocation_mode: "{{ item.Allocation_Mode }}"
      state: query
    when: item.Domain_Type != "vmm"
    with_items: "{{ spreadsheet_VLAN_AEP_Dom }}"
    no_log: True
    register: Non_VM_Bind_output

  - name: Get Bind/Detech Domain of VLAN pool for vmm domain
    aci_domain_to_vlan_pool:
      hostname: "{{ inventory_hostname }}"
      username: '{{ username }}'
      password: "{{ password }}"
      validate_certs: False
      domain: "{{ item.Domain }}"
      domain_type: "{{ item.Domain_Type}}"
      vm_provider: "{{ item.VM_Provider }}"
      pool: "{{ item.VLAN_Names }}"
      pool_allocation_mode: "{{ item.Allocation_Mode }}"
      state: query
    when: item.Domain_Type == "vmm"
    with_items: "{{ spreadsheet_VLAN_AEP_Dom }}"
    no_log: True
    register: VM_Bind_output

  - name: Get AEP of domain binding
    aci_aep_to_domain:
      hostname: "{{ inventory_hostname }}"
      username: '{{ username }}'
      password: "{{ password }}"
      validate_certs: False
      aep: "{{ item.AEP }}"
      domain: "{{ item.Domain }}"
      domain_type: "{{ item.Domain_Type}}"
      state: query
    when: item.Domain_Type != "vmm"
    with_items: "{{ spreadsheet_VLAN_AEP_Dom }}"
    no_log: True
    register: Non_VM_AEP_output

  - name: Get AEP of domain binding for vmm domain
    aci_aep_to_domain:
      hostname: "{{ inventory_hostname }}"
      username: '{{ username }}'
      password: "{{ password }}"
      validate_certs: False
      aep: "{{ item.AEP }}"
      domain: "{{ item.Domain }}"
      domain_type: "{{ item.Domain_Type}}"
      vm_provider: "{{ item.VM_Provider }}"
      state: query
    when: item.Domain_Type == "vmm"
    with_items: "{{ spreadsheet_VLAN_AEP_Dom }}"
    no_log: True
    register: VM_AEP_output

  - name: Json Query
    set_fact:
     query_result:
       vlan_range: "{{ vlan_range_output | json_query('results[*].current[*].fvnsEncapBlk.attributes.dn') }}"
       non_vm:
         domain: "{{ Non_VM_Bind_output | json_query('results[*].current[*].physDomP.attributes.name') }}"
         vlan: "{{ Non_VM_Bind_output | json_query('results[*].current[*].physDomP.children[*].infraRsVlanNs.attributes.tDn') }}"
         aep: "{{ Non_VM_AEP_output | json_query('results[*].current[*].infraRsDomP.attributes.dn') }}"
       vm:
         domain: "{{ VM_Bind_output | json_query('results[*].current[*].vmmDomP.attributes.name') }}"
         vlan: "{{ VM_Bind_output | json_query('results[*].current[*].vmmDomP.children[*].infraRsVlanNs.attributes.tDn') }}"
         aep: "{{ VM_AEP_output | json_query('results[*].current[*].infraRsDomP.attributes.dn') }}"
